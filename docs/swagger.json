{
  "openapi": "3.0.3",
  "info": {
    "description": "This is a boiler plate",
    "version": "1.0.0",
    "title": "Swagger Boilerplate - OpenAPI 3.0"
  },
  "servers": [
    {
      "url": "{base_url}/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Organisation",
      "description": "All actions by the organisation"
    }
  ],


  "paths":{
    "/organisation": {
      "post":{
        "tags": ["Organisation"],
        "summary": "create an organisation",
        "security": [
            {
              "ApiKeyAuth": []
            }
          ],
        "requestBody":{
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "name",
                  "address",
                  "email",
                  "phone",
                  "created_at",
                  "updated_at"
                ],
                "properties":{
                  "userid": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "email": {
                    "type":"string",
                    "format": "email"
                  },
                  "phone": {
                    "type":"string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type":"string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfull operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "422": {
            "description": "Validation exception"
          }
        }
      }
    },
  "/organisation/{id}": {
    "get": {
      "tags": ["Organisation"],
      "summary": "find organisation by id",
      "security": [
          {
            "ApiKeyAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "400": {
            "description": "Invalid id supplied"
          },
          "404": {
            "description": "organisation not found"
          }
        }
      },
    "put": {
      "tags": ["Organisation"],
      "summary": "update an organisation",
      "security": [
        {
          "ApiKeyAuth": []
        }  
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required":true,
          "schema": {
            "type": "string"
          }
        }
      ],
        "requestBody":{
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "userId",
                  "name",
                  "address",
                  "email",
                  "phone",
                  "created_at",
                  "updated_at"
                ],
                "properties":{
                  "userid": {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "address": {
                    "type": "string"
                  },
                  "email": {
                    "type":"string",
                    "format": "email"
                  },
                  "phone": {
                    "type":"string"
                  },
                  "created_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "updated_at": {
                    "type":"string",
                    "format": "date-time"
                  }
                }
              }
            }
          }
        },
      "responses": {
        "200": {
          "description": "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "400": {
          "description": "Invalid id supplied"
        },
        "404": {
          "description": "Organisation not found"
        },
        "422": {
          "description": "Validation exception"
        }
      }
  },
  "delete": {
      "tags": ["Organisation"],
      "summary": "delete an organisation",
      "security": [
        {
          "ApiKeyAuth": []
        }  
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required":true,
          "schema": {
            "type": "string"
          }
        }
      ],
      "responses": {
        "200": {
          "description": "Successful operation",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Organisation"
              }
            }
          }
        },
        "400": {
          "description": "invalid organisation id"
        }
      }
    }
  },

  "/contents" : {
    "get" : {
      "tags" : [ "Contents" ],
      "summary" : "Read all contents in the blog",
      "responses" : {
        "200" : {
          "description" : "OK",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        }
      }
    },
    "post" : {
      "tags" : [ "Contents" ],
      "summary" : "Create a new content",
      "requestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/contents_body"
            }
          }
        },
        "required" : true
      },
      "responses" : {
        "201" : {
          "description" : "Created"
        },
        "400" : {
          "description" : "Bad request"
        }
      }
    }
  },

  "/content/{id}" : {
    "get" : {
      "tags" : [ "Contents" ],
      "summary" : "Get a content by ID",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer",
          "example" : 1
        }
      } ],
      "responses" : {
        "200" : {
          "description" : "OK",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/inline_response_200"
              }
            }
          }
        },
        "404" : {
          "description" : "Not found"
        }
      }
    },
    "put" : {
      "tags" : [ "Contents" ],
      "summary" : "Update a content by ID",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "ID of the content to update",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "requestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/content_id_body"
            }
          }
        },
        "required" : true
      },
      "responses" : {
        "200" : {
          "description" : "OK"
        },
        "400" : {
          "description" : "Bad request"
        },
        "404" : {
          "description" : "Not found"
        }
      }
    },
    "delete" : {
      "tags" : [ "Contents" ],
      "summary" : "Delete a content by ID",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "ID of the content to delete",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "responses" : {
        "204" : {
          "description" : "No content"
        },
        "404" : {
          "description" : "Not found"
        }
      }
    }
  },
  "/contents/{userId}" : {
    "get" : {
      "tags" : [ "Contents" ],
      "summary" : "Read all contents for a particular set",
      "parameters" : [ {
        "name" : "userId",
        "in" : "path",
        "description" : "ID of the set to retrieve contents from",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "responses" : {
        "200" : {
          "description" : "OK",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/inline_response_200"
                }
              }
            }
          }
        },
        "404" : {
          "description" : "Not found"
        }
      }
    }
  },
  "/users" : {
    "get" : {
      "tags" : [ "Users" ],
      "summary" : "Read all users",
      "responses" : {
        "200" : {
          "description" : "OK",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/inline_response_200_1"
                }
              }
            }
          }
        },
        "400" : {
          "description" : "Bad request"
        }
      }
    }
  },
  "/users/{id}" : {
    "get" : {
      "tags" : [ "Users" ],
      "summary" : "Read a user by ID",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "ID of the user to read",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "responses" : {
        "200" : {
          "description" : "OK",
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "#/components/schemas/inline_response_200_1"
              }
            }
          }
        },
        "404" : {
          "description" : "Not found"
        }
      }
    },
    "put" : {
      "tags" : [ "Users" ],
      "summary" : "Update a user by ID",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "ID of the user to update",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "requestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/users_id_body"
            }
          }
        },
        "required" : true
      },
      "responses" : {
        "200" : {
          "description" : "OK"
        },
        "400" : {
          "description" : "Bad request"
        },
        "404" : {
          "description" : "Not found"
        }
      }
    },
    "delete" : {
      "tags" : [ "Users" ],
      "summary" : "Delete a user by ID",
      "parameters" : [ {
        "name" : "id",
        "in" : "path",
        "description" : "ID of the user to delete",
        "required" : true,
        "style" : "simple",
        "explode" : false,
        "schema" : {
          "type" : "integer"
        }
      } ],
      "responses" : {
        "204" : {
          "description" : "No content"
        },
        "404" : {
          "description" : "Not found"
        }
      }
    }
  },

  "/contacts" : {
    "post" : {
      "tags" : [ "Contacts" ],
      "summary" : "Create a new contact message",
      "requestBody" : {
        "content" : {
          "application/json" : {
            "schema" : {
              "$ref" : "#/components/schemas/contact"
            }
          }
        },
        "required" : true
      },
      "responses" : {
        "201" : {
          "description" : "Created Successfully"
        },
        "400" : {
          "description" : "Bad request"
        }
      }
    }
  }
},




     






  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "authorization"
      }
    },
    "schemas": {


      "inline_response_200" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "integer"
          }
        }
      },
      "contents_body" : {
        "required" : [ "description", "title", "user_id" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "integer"
          }
        }
      },
      "content_id_body" : {
        "required" : [ "description", "title", "user_id" ],
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "user_id" : {
            "type" : "integer"
          }
        }
      },
      "inline_response_200_1" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer"
          },
          "email" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "profile_picture" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "isverified" : {
            "type" : "boolean"
          },
          "created_at" : {
            "type" : "string",
            "format" : "date-time"
          },
          "updated_at" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      },
      "users_id_body" : {
        "required" : [ "email", "password" ],
        "type" : "object",
        "properties" : {
          "email" : {
            "type" : "string"
          },
          "password" : {
            "type" : "string"
          },
          "first_name" : {
            "type" : "string"
          },
          "last_name" : {
            "type" : "string"
          },
          "profile_picture" : {
            "type" : "string"
          },
          "role" : {
            "type" : "string"
          },
          "isverified" : {
            "type" : "boolean"
          }
        }
      }, 

      "Organisation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "userid": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "phone": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at":{
            "type": "string",
            "format": "date-time"
          }
        }
      },

      "contact" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "message" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          }
        }
      }
    }
  }
}