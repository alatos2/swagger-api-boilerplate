{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Boilerplate - OpenAPI 3.0",
    "description": "This is a boilerplate",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "{base_url}/api/v1"
    }
  ],
  "tags": [
     {
      "name": "UserAuth",
      "description": "User authentication and authorization"
    },
      {
      "name": "Users",
      "description": "All actions related to users"
    },
    {
      "name": "Organisation",
      "description": "All actions by the organisation"
    },
    {
      "name": "Contents",
      "description": "All actions related to contents"
    }
  
   
  ],
  "paths": {
    "/user/register": {
      "post": {
        "tags": ["UserAuth"],
        "summary": "Create a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Account created successfully"
          },
          "400": {
            "description": "Email do not match"
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/user/login": {
      "post": {
        "tags": ["UserAuth"],
        "summary": "Login a user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful, return data plus tokens"
          },
          "401": {
            "description": "Not verified"
          },
          "403": {
            "description": "Wrong email or password"
          }
        }
      }
    },
    "/user/otp_request": {
      "post": {
        "tags": ["UserAuth"],
        "summary": "Request a new OTP",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP sent successfully, return data"
          },
          "400": {
            "description": "Invalid email address"
          }
        }
      }
    },
    "/user/account_verification_otp": {
      "post": {
        "tags": ["UserAuth"],
        "summary": "Verify a new user's email address account",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "otp"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "otp": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Account successfully verified"
          },
          "400": {
            "description": "Invalid OTP"
          },
          "410": {
            "description": "OTP expired"
          }
        }
      }
    },
    "/user/verify_otp": {
      "post": {
        "tags": ["UserAuth"],
        "summary": "Verify OTP for various activities",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["otp"],
                "properties": {
                  "otp": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OTP successfully verified"
          },
          "400": {
            "description": "Invalid OTP"
          },
          "410": {
            "description": "OTP expired"
          }
        }
      }
    },
    "/user/reset_password": {
      "post": {
        "tags": ["UserAuth"],
        "summary": "Reset password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["old_password", "new_password", "confirm_new_password"],
                "properties": {
                  "old_password": {
                    "type": "string"
                  },
                  "new_password": {
                    "type": "string"
                  },
                  "confirm_new_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          },
          "400": {
            "description": "Incorrect old password"
          }
        }
      }
    },
    "/user/forget_password": {
      "post": {
        "tags": ["UserAuth"],
        "summary": "Forgot password",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["new_password", "confirm_new_password"],
                "properties": {
                  "new_password": {
                    "type": "string"
                  },
                  "confirm_new_password": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reset successfully"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users"],
        "summary": "Get all users",
        "responses": {
          "200": {
            "description": "A list of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
    


      "put": {
        "tags": ["Users"],
        "summary": "Update a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/users_id_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the user to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    


    "/organisations": {
      "get": {
        "tags": ["Organisation"],
        "summary": "Get all organisations",
        "responses": {
          "200": {
            "description": "A list of organisations",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Organisation"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/organisations/{id}": {
      "get": {
        "tags": ["Organisation"],
        "summary": "Get an organisation by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Organisation details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Organisation"
                }
              }
            }
          },
          "404": {
            "description": "Organisation not found"
          }
        }
      }
    },

    "/contents": {
      "get": {
        "tags": ["Contents"],
        "summary": "Read all contents in the blog",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": ["Contents"],
        "summary": "Create a new content",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/contents_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/content/{id}": {
      "get": {
        "tags": ["Contents"],
        "summary": "Get a content by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer",
              "example": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/inline_response_200"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "tags": ["Contents"],
        "summary": "Update a content by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the content to update",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/content_id_body"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "delete": {
        "tags": ["Contents"],
        "summary": "Delete a content by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the content to delete",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/contents/{userId}": {
      "get": {
        "tags": ["Contents"],
        "summary": "Read all contents for a particular user",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of the user",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/inline_response_200"
                  }
                }
              }
            }
          }
        }
      }
    }

  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          },
          "username": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "profile_picture": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "isverified": {
            "type": "boolean"
          },
          "verified_at": {
            "type": "string",
            "format": "date-time"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "default": "current_timestamp"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "default": "current_timestamp"
          }
        }
      },
      "UserOtp": {
        "type": "object",
        "required": ["userId"],
        "properties": {
          "id": {
            "type": "integer"
          },
          "userId": {
            "type": "string"
          },
          "otp": {
            "type": "integer"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Organisation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Content": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  }
}
